# Generated by Django 5.0.8 on 2024-08-14 17:43

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AbilityType",
            fields=[
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("STR", "Strength"),
                            ("DEX", "Dexterity"),
                            ("CON", "Constitution"),
                            ("INT", "Intelligence"),
                            ("WIS", "Wisdom"),
                            ("CHA", "Charisma"),
                        ],
                        max_length=3,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("description", models.TextField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name="Advancement",
            fields=[
                ("xp", models.IntegerField()),
                ("level", models.SmallIntegerField(primary_key=True, serialize=False)),
                ("proficiency_bonus", models.SmallIntegerField()),
            ],
            options={
                "ordering": ["xp"],
            },
        ),
        migrations.CreateModel(
            name="ArmorSettings",
            fields=[
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("Padded", "Padded"),
                            ("Leather", "Leather"),
                            ("Studded leather", "Studded Leather"),
                            ("Hide", "Hide"),
                            ("Chain shirt", "Chain Shirt"),
                            ("Scale mail", "Scale Mail"),
                            ("Breastplate", "Breastplate"),
                            ("Half plate", "Half Plate"),
                            ("Ring mail", "Ring Mail"),
                            ("Chain mail", "Chain Mail"),
                            ("Splint", "Splint"),
                            ("Plate", "Plate"),
                            ("Shield", "Shield"),
                        ],
                        max_length=30,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "armor_type",
                    models.CharField(
                        choices=[
                            ("LA", "Light Armor"),
                            ("MA", "Medium Armor"),
                            ("HA", "Heavy Armor"),
                            ("SH", "Shield"),
                        ],
                        max_length=2,
                    ),
                ),
                ("cost", models.SmallIntegerField()),
                ("ac", models.CharField(max_length=25)),
                ("strength", models.CharField(blank=True, max_length=6, null=True)),
                ("stealth", models.CharField(blank=True, max_length=1, null=True)),
                ("weight", models.SmallIntegerField()),
            ],
            options={
                "verbose_name_plural": "armor settings",
            },
        ),
        migrations.CreateModel(
            name="Gear",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GearSettings",
            fields=[
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("Abacus", "Abacus"),
                            ("Acid", "Acid"),
                            ("Alchemist's fire", "Alchemists Fire"),
                            ("Arrows", "Arrows"),
                            ("Blowgun needles", "Blowgun Needles"),
                            ("Crossbow bolts", "Crossbow Bolts"),
                            ("Sling bullets", "Sling Bullets"),
                            ("Antitoxin", "Antitoxin"),
                            ("Crystal", "Crystal"),
                            ("Orb", "Orb"),
                            ("Rod", "Rod"),
                            ("Staff", "Staff"),
                            ("Wand", "Wand"),
                            ("Backpack", "Backpack"),
                            ("Ball bearings", "Ball Bearings"),
                            ("Basket", "Basket"),
                            ("Bedroll", "Bedroll"),
                            ("Bell", "Bell"),
                            ("Blanket", "Blanket"),
                            ("Block and tackle", "Block And Tackle"),
                            ("Book", "Book"),
                            ("Bottle, glass", "Bottle Glass"),
                            ("Caltrops", "Caltrops"),
                            ("Candle", "Candle"),
                            ("Case, crossbow bolt", "Case Crossbow Bolt"),
                            ("Case, map or scroll", "Case Map Or Scroll"),
                            ("Chain", "Chain"),
                            ("Chalk", "Chalk"),
                            ("Chest", "Chest"),
                            ("Climber's kit", "Climbers Kit"),
                            ("Clothes, common", "Clothes Common"),
                            ("Clothes, costume", "Clothes Costume"),
                            ("Clothes, fine", "Clothes Fine"),
                            ("Clothes, traveler's", "Clothes Travelers"),
                            ("Component pouch", "Component Pouch"),
                            ("Crowbar", "Crowbar"),
                            ("Sprig of mistletoe", "Spring Of Mistletoe"),
                            ("Totem", "Totem"),
                            ("Wooden staff", "Wooden Staff"),
                            ("Yew wand", "Yew Wand"),
                            ("Fishing tackle", "Fishing Tackle"),
                            ("Flask or tankard", "Flask Or Tankard"),
                            ("Grappling hook", "Grappling Hook"),
                            ("Hammer", "Hammer"),
                            ("Hammer, sledge", "Hammer Sledge"),
                            ("Healer's kit", "Healers Kit"),
                            ("Amulet", "Amulet"),
                            ("Emblem", "Emblem"),
                            ("Reliquary", "Reliquary"),
                            ("Holy water", "Holy Water"),
                            ("Hourglass", "Hourglass"),
                            ("Hunting trap", "Hunting Trap"),
                            ("Ink", "Ink"),
                            ("Ink pen", "Ink Pen"),
                            ("Jug or pitcher", "Jug Or Pitcher"),
                            ("Ladder", "Ladder"),
                            ("Lamp", "Lamp"),
                            ("Lantern, bullseye", "Lantern Bullseye"),
                            ("Lantern, hooded", "Lantern Hooded"),
                            ("Lock", "Lock"),
                            ("Magnifying glass", "Magnifying Glass"),
                            ("Manacles", "Manacles"),
                            ("Mess kit", "Mess Kit"),
                            ("Mirror, steel", "Mirror Steel"),
                            ("Oil", "Oil"),
                            ("Paper", "Paper"),
                            ("Parchment", "Parchment"),
                            ("Perfume", "Perfume"),
                            ("Pick, miner's", "Pick Miners"),
                            ("Piton", "Piton"),
                            ("Poison, basic", "Poison Basic"),
                            ("Pole", "Pole"),
                            ("Pot, iron", "Pot Iron"),
                            ("Potion of healing", "Potion Of Healing"),
                            ("Pouch", "Pouch"),
                            ("Quiver", "Quiver"),
                            ("Ram, portable", "Ram Portable"),
                            ("Rations", "Rations"),
                            ("Robes", "Robes"),
                            ("Rope, hempen", "Rope Hempen"),
                            ("Rope, silk", "Rope Silk"),
                            ("Sack", "Sack"),
                            ("Scale, merchant's", "Scale Merchants"),
                            ("Sealing wax", "Sealing Wax"),
                            ("Shovel", "Shovel"),
                            ("Signal whistle", "Signal Whistle"),
                            ("Signet ring", "Signet Ring"),
                            ("Soap", "Soap"),
                            ("Spellbook", "Spellbook"),
                            ("Spikes, iron", "Spikes Iron"),
                            ("Spyglass", "Spyglass"),
                            ("Tent, two-person", "Tent Two Persons"),
                            ("Tinderbox", "Tinderbox"),
                            ("Torch", "Torch"),
                            ("Vial", "Vial"),
                            ("Waterskin", "Waterskin"),
                            ("Whetstone", "Whetstone"),
                        ],
                        max_length=30,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "gear_type",
                    models.CharField(
                        choices=[
                            ("AM", "Ammunition"),
                            ("AF", "Arcane focus"),
                            ("DF", "Druidic focus"),
                            ("HS", "Holy symbol"),
                            ("MI", "Misc"),
                        ],
                        default="MI",
                        max_length=2,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "gear settings",
            },
        ),
        migrations.CreateModel(
            name="HitPoints",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("hit_dice", models.CharField(max_length=5)),
                ("hp_first_level", models.SmallIntegerField()),
                ("hp_higher_levels", models.SmallIntegerField()),
            ],
            options={
                "verbose_name_plural": "hit points",
            },
        ),
        migrations.CreateModel(
            name="Inventory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("capacity", models.SmallIntegerField(default=0)),
                ("gp", models.SmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="KlassAdvancement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "klass",
                    models.CharField(
                        choices=[
                            ("C", "Cleric"),
                            ("F", "Fighter"),
                            ("R", "Rogue"),
                            ("W", "Wizard"),
                        ],
                        max_length=1,
                    ),
                ),
                ("level", models.SmallIntegerField()),
                ("proficiency_bonus", models.SmallIntegerField()),
            ],
            options={
                "ordering": ["klass"],
            },
        ),
        migrations.CreateModel(
            name="KlassFeature",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "klass",
                    models.CharField(
                        choices=[
                            ("C", "Cleric"),
                            ("F", "Fighter"),
                            ("R", "Rogue"),
                            ("W", "Wizard"),
                        ],
                        max_length=1,
                        unique=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Language",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("common", "Common"),
                            ("dwarvish", "Dwarvish"),
                            ("elvish", "Elvish"),
                            ("giant", "Giant"),
                            ("gnomish", "Gnomish"),
                            ("goblin", "Goblin"),
                            ("halfling", "Halfling"),
                            ("orc", "Orc"),
                            ("abyssal", "Abyssal"),
                            ("celestial", "Celestial"),
                            ("deep_speech", "Deep Speech"),
                            ("draconic", "Draconic"),
                            ("infernal", "Infernal"),
                            ("primordial", "Primordial"),
                            ("sylvan", "Sylvan"),
                            ("undercommon", "Undercommon"),
                        ],
                        max_length=11,
                        unique=True,
                    ),
                ),
                (
                    "language_type",
                    models.CharField(
                        choices=[("S", "Standard"), ("E", "Exotic")], max_length=1
                    ),
                ),
                (
                    "script",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("common", "Common"),
                            ("dwarvish", "Dwarvish"),
                            ("elvish", "Elvish"),
                            ("giant", "Giant"),
                            ("gnomish", "Gnomish"),
                            ("goblin", "Goblin"),
                            ("halfling", "Halfling"),
                            ("orc", "Orc"),
                            ("abyssal", "Abyssal"),
                            ("celestial", "Celestial"),
                            ("deep_speech", "Deep Speech"),
                            ("draconic", "Draconic"),
                            ("infernal", "Infernal"),
                            ("primordial", "Primordial"),
                            ("sylvan", "Sylvan"),
                            ("undercommon", "Undercommon"),
                        ],
                        max_length=11,
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Pack",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PackSettings",
            fields=[
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("Burglar's Pack", "Burglars Pack"),
                            ("Diplomat's Pack", "Diplomats Pack"),
                            ("Dungeoneer's Pack", "Dungeoneers Pack"),
                            ("Entertainer's Pack", "Entertainers Pack"),
                            ("Explorer's Pack", "Explorers Pack"),
                            ("Priest's Pack", "Priests Pack"),
                            ("Scholar's Pack", "Scholars Pack"),
                        ],
                        max_length=30,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "pack settings",
            },
        ),
        migrations.CreateModel(
            name="SavingThrowDisadvantage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SavingThrowProficiency",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "saving throws proficiencies",
            },
        ),
        migrations.CreateModel(
            name="Sense",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("brave", "Brave"),
                            ("cantrip", "Cantrip"),
                            ("darkvision", "Darkvision"),
                            ("dwarven_armor_training", "Dwarven Armor Training"),
                            ("dwarven_combat_training", "Dwarven Combat Training"),
                            ("dwarven_resilience", "Dwarven Resilience"),
                            ("dwarven_toughness", "Dwarven Toughness"),
                            ("elf_weapon_training", "Elf Weapon Training"),
                            ("extra_language", "Extra Language"),
                            ("fey_ancestry", "Fey Ancestry"),
                            ("fleet_of_foot", "Fleet of Foot"),
                            ("halfling_nimbleness", "Halfling Nimbleness"),
                            ("keen_senses", "Keen Senses"),
                            ("lucky", "Lucky"),
                            ("mask_of_the_wild", "Mask of the Wild"),
                            ("stonecunning", "Stonecunning"),
                            ("tool_proficiency", "Tool Proficiency"),
                            ("trance", "Trance"),
                        ],
                        max_length=30,
                        unique=True,
                    ),
                ),
                ("description", models.TextField(max_length=50)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Skill",
            fields=[
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("Athletics", "Athletics"),
                            ("Acrobatics", "Acrobatics"),
                            ("Sleight of Hand", "Sleight Of Hand"),
                            ("Stealth", "Stealth"),
                            ("Arcana", "Arcana"),
                            ("History", "History"),
                            ("Investigation", "Investigation"),
                            ("Nature", "Nature"),
                            ("Religion", "Religion"),
                            ("Animal Handling", "Animal Handling"),
                            ("Insight", "Insight"),
                            ("Medicine", "Medicine"),
                            ("Perception", "Perception"),
                            ("Survival", "Survival"),
                            ("Deception", "Deception"),
                            ("Intimidation", "Intimidation"),
                            ("Performance", "Performance"),
                            ("Persuasion", "Persuasion"),
                        ],
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("description", models.TextField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name="SkillProficiency",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "skills proficiencies",
            },
        ),
        migrations.CreateModel(
            name="SpellCastDisadvantage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Tool",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ToolProficiency",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "tools proficiencies",
            },
        ),
        migrations.CreateModel(
            name="ToolSettings",
            fields=[
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("Alchemist's supplies", "Alchemists Supplies"),
                            ("Brewer's supplies", "Brewers Supplies"),
                            ("Calligrapher's supplies", "Calligraphers Supplies"),
                            ("Carpenter's tools", "Carpenters Tools"),
                            ("Cartographer's tools", "Cartographers Tools"),
                            ("Cobbler's tools", "Cobblers Tools"),
                            ("Cook's utensils", "Cooks Utensils"),
                            ("Glassblower's tools", "Glassblowers Tools"),
                            ("Jeweler's tools", "Jewelers Tools"),
                            ("Leatherworker's tools", "Leatherworkers Tools"),
                            ("Mason's tools", "Masons Tools"),
                            ("Painter's supplies", "Painters Supplies"),
                            ("Potter's tools", "Potters Tools"),
                            ("Smith's tools", "Smiths Tools"),
                            ("Tinker's tools", "Tinkers Tools"),
                            ("Weaver's tools", "Weavers Tools"),
                            ("Woodcarver's tools", "Woodcarvers Tools"),
                            ("Disguise kit", "Disguise Kit"),
                            ("Forgery kit", "Forgery Kit"),
                            ("Dice set", "Dice Set"),
                            ("Dragonchess set", "Dragonchess Set"),
                            ("Playing card set", "Playing Card Set"),
                            ("Three-Dragon Ante set", "Three Dragon Ante Set"),
                            ("Herbalism kit", "Herbalism Kit"),
                            ("Bagpipes", "Bagpipes"),
                            ("Drum", "Drum"),
                            ("Dulcimer", "Dulcimer"),
                            ("Flute", "Flute"),
                            ("Lute", "Lute"),
                            ("Lyre", "Lyre"),
                            ("Horn", "Horn"),
                            ("Pan flute", "Pan Flute"),
                            ("Shawm", "Shawm"),
                            ("Viol", "Viol"),
                            ("Navigator's tools", "Navigators Tools"),
                            ("Poisoner's kit", "Poisoners Kit"),
                            ("Thieves' tools", "Thieves Tools"),
                        ],
                        max_length=30,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "tool_type",
                    models.CharField(
                        choices=[
                            ("AT", "Artisan's tools"),
                            ("GS", "Gaming set"),
                            ("MU", "Musical instrument"),
                            ("MI", "Misc"),
                        ],
                        default="MI",
                        max_length=2,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "tool settings",
            },
        ),
        migrations.CreateModel(
            name="Weapon",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WeaponProficiency",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "weapons proficiencies",
            },
        ),
        migrations.CreateModel(
            name="WeaponSettings",
            fields=[
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("Club", "Club"),
                            ("Dagger", "Dagger"),
                            ("Greatclub", "Greatclub"),
                            ("Handaxe", "Handaxe"),
                            ("Javelin", "Javelin"),
                            ("Light hammer", "Light Hammer"),
                            ("Mace", "Mace"),
                            ("Quarterstaff", "Quarterstaff"),
                            ("Sickle", "Sickle"),
                            ("Spear", "Spear"),
                            ("Crossbow, light", "Crossbow Light"),
                            ("Dart", "Dart"),
                            ("Shortbow", "Shortbow"),
                            ("Sling", "Sling"),
                            ("Battleaxe", "Battleaxe"),
                            ("Flail", "Flail"),
                            ("Glaive", "Glaive"),
                            ("Greataxe", "Greataxe"),
                            ("Greatsword", "Greatsword"),
                            ("Halberd", "Halberd"),
                            ("Lance", "Lance"),
                            ("Longsword", "Longsword"),
                            ("Maul", "Maul"),
                            ("Morningstar", "Morningstar"),
                            ("Pike", "Pike"),
                            ("Rapier", "Rapier"),
                            ("Scimitar", "Scimitar"),
                            ("Shortsword", "Shortsword"),
                            ("Trident", "Trident"),
                            ("War pick", "War Pick"),
                            ("Warhammer", "Warhammer"),
                            ("Whip", "Whip"),
                            ("Blowgun", "Blowgun"),
                            ("Crossbow, hand", "Crossbow Hand"),
                            ("Crossbow, heavy", "Crossbow Heavy"),
                            ("Longbow", "Longbow"),
                            ("Net", "Net"),
                        ],
                        max_length=30,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "weapon_type",
                    models.CharField(
                        choices=[
                            ("SM", "Simple Melee"),
                            ("SR", "Simple Ranged"),
                            ("MM", "Martial Melee"),
                            ("MR", "Marial Ranged"),
                        ],
                        max_length=2,
                    ),
                ),
                ("cost", models.SmallIntegerField()),
                ("damage", models.CharField(max_length=15, null=True)),
                ("weight", models.SmallIntegerField()),
                ("properties", models.CharField(max_length=60, null=True)),
            ],
            options={
                "verbose_name_plural": "weapon settings",
            },
        ),
        migrations.CreateModel(
            name="AbilityCheckDisadvantage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ability_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="character.abilitytype",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Ability",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("score", models.SmallIntegerField()),
                ("modifier", models.SmallIntegerField(default=0)),
                (
                    "ability_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="character.abilitytype",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "abilities",
            },
        ),
        migrations.CreateModel(
            name="ArmorProficiency",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "armor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="character.armorsettings",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "armor proficiencies",
            },
        ),
        migrations.CreateModel(
            name="Armor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "settings",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="character.armorsettings",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AttackRollDisadvantage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ability_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="character.abilitytype",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Character",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "race",
                    models.CharField(
                        choices=[
                            ("human", "Human"),
                            ("halfling", "Halfling"),
                            ("hill_dwarf", "Hill Dwarf"),
                            ("mountain_dwarf", "Mountain Dwarf"),
                            ("high_elf", "High Elf"),
                            ("wood_elf", "Wood Elf"),
                        ],
                        max_length=14,
                    ),
                ),
                ("height", models.FloatField(default=0)),
                ("weight", models.SmallIntegerField(default=0)),
                (
                    "klass",
                    models.CharField(
                        choices=[
                            ("C", "Cleric"),
                            ("F", "Fighter"),
                            ("R", "Rogue"),
                            ("W", "Wizard"),
                        ],
                        max_length=1,
                        verbose_name="class",
                    ),
                ),
                ("level", models.SmallIntegerField(default=1)),
                ("xp", models.IntegerField(default=0)),
                ("hp", models.SmallIntegerField(default=100)),
                ("max_hp", models.SmallIntegerField(default=100)),
                ("proficiency_bonus", models.SmallIntegerField(default=2)),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female"), ("A", "Androgynous")],
                        default="M",
                        max_length=1,
                    ),
                ),
                ("ac", models.SmallIntegerField(default=0)),
                ("adult_age", models.SmallIntegerField(blank=True, null=True)),
                ("life_expectancy", models.SmallIntegerField(blank=True, null=True)),
                (
                    "alignment",
                    models.CharField(
                        blank=True,
                        choices=[("L", "Lawful"), ("F", "Freedom"), ("N", "None")],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "size",
                    models.CharField(
                        blank=True,
                        choices=[("S", "Small"), ("M", "Medium")],
                        max_length=1,
                        null=True,
                    ),
                ),
                ("speed", models.SmallIntegerField(blank=True, null=True)),
                ("hit_dice", models.CharField(default="1d8", max_length=5)),
                ("hp_increase", models.SmallIntegerField(default=0)),
                (
                    "background",
                    models.CharField(
                        choices=[
                            ("acolyte", "Acolyte"),
                            ("criminal", "Criminal"),
                            ("folk_hero", "Folk Hero"),
                            ("noble", "Noble"),
                            ("sage", "Sage"),
                            ("soldier", "Soldier"),
                        ],
                        max_length=10,
                    ),
                ),
                ("personality_trait", models.TextField(max_length=150)),
                ("ideal", models.TextField(blank=True, max_length=150, null=True)),
                ("bond", models.TextField(blank=True, max_length=150, null=True)),
                ("flaw", models.TextField(blank=True, max_length=150, null=True)),
                ("abilities", models.ManyToManyField(to="character.ability")),
            ],
        ),
    ]
