# Generated by Django 4.2.5 on 2023-10-07 07:18

import django.db.models.deletion
import django.db.models.functions.text
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Ability",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=30, unique=True)),
                ("description", models.TextField(max_length=50)),
            ],
            options={
                "verbose_name_plural": "abilities",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Advancement",
            fields=[
                ("xp", models.IntegerField()),
                ("level", models.SmallIntegerField(primary_key=True, serialize=False)),
                ("proficiency_bonus", models.SmallIntegerField()),
            ],
            options={
                "ordering": ["xp"],
            },
        ),
        migrations.CreateModel(
            name="Armor",
            fields=[
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("Padded", "Padded"),
                            ("Leather", "Leather"),
                            ("Studded leather", "Studded Leather"),
                            ("Hide", "Hide"),
                            ("Chain shirt", "Chain Shirt"),
                            ("Scale mail", "Scale Mail"),
                            ("Breastplate", "Breastplate"),
                            ("Half plate", "Half Plate"),
                            ("Ring mail", "Ring Mail"),
                            ("Chain mail", "Chain Mail"),
                            ("Splint", "Splint"),
                            ("Plate", "Plate"),
                            ("Shield", "Shield"),
                        ],
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "armor_type",
                    models.CharField(
                        choices=[
                            ("LA", "Light Armor"),
                            ("MA", "Medium Armor"),
                            ("HA", "Heavy Armor"),
                            ("SH", "Shield"),
                        ],
                        max_length=2,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ClassAdvancement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "class_name",
                    models.CharField(
                        choices=[
                            ("C", "Cleric"),
                            ("F", "Fighter"),
                            ("R", "Rogue"),
                            ("W", "Wizard"),
                        ],
                        max_length=1,
                    ),
                ),
                ("level", models.SmallIntegerField()),
                ("proficiency_bonus", models.SmallIntegerField()),
            ],
            options={
                "ordering": ["class_name"],
            },
        ),
        migrations.CreateModel(
            name="ClassFeature",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "class_name",
                    models.CharField(
                        choices=[
                            ("C", "Cleric"),
                            ("F", "Fighter"),
                            ("R", "Rogue"),
                            ("W", "Wizard"),
                        ],
                        max_length=1,
                        unique=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Inventory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("capacity", models.SmallIntegerField(default=0)),
                ("gp", models.SmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="Language",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("C", "Common"),
                            ("D", "Dwarvish"),
                            ("E", "Elvish"),
                            ("H", "Halfling"),
                        ],
                        max_length=1,
                        unique=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Weapon",
            fields=[
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("Club", "Club"),
                            ("Dagger", "Dagger"),
                            ("Greatclub", "Greatclub"),
                            ("Handaxe", "Handaxe"),
                            ("Javelin", "Javelin"),
                            ("Light hammer", "Light Hammer"),
                            ("Mace", "Mace"),
                            ("Quarterstaff", "Quarterstaff"),
                            ("Sickle", "Sickle"),
                            ("Spear", "Spear"),
                            ("Crossbow, light", "Crossbow Light"),
                            ("Dart", "Dart"),
                            ("Shortbow", "Shortbow"),
                            ("Sling", "Sling"),
                            ("Battleaxe", "Battleaxe"),
                            ("Flail", "Flail"),
                            ("Glaive", "Glaive"),
                            ("Greataxe", "Greataxe"),
                            ("Greatsword", "Greatsword"),
                            ("Halberd", "Halberd"),
                            ("Lance", "Lance"),
                            ("Longsword", "Longsword"),
                            ("Maul", "Maul"),
                            ("Morningstar", "Morningstar"),
                            ("Pike", "Pike"),
                            ("Rapier", "Rapier"),
                            ("Scimitar", "Scimitar"),
                            ("Shortsword", "Shortsword"),
                            ("Trident", "Trident"),
                            ("War pick", "War Pick"),
                            ("Warhammer", "Warhammer"),
                            ("Whip", "Whip"),
                            ("Blowgun", "Blowgun"),
                            ("Crossbow, hand", "Crossbow Hand"),
                            ("Crossbow, heavy", "Crossbow Heavy"),
                            ("Longbow", "Longbow"),
                            ("Net", "Net"),
                        ],
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "weapon_type",
                    models.CharField(
                        choices=[
                            ("SM", "Simple Melee"),
                            ("SR", "Simple Ranged"),
                            ("MM", "Martial Melee"),
                            ("MR", "Marial Ranged"),
                        ],
                        max_length=2,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RacialTrait",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "race",
                    models.CharField(
                        choices=[
                            ("H", "Human"),
                            ("G", "Halfling"),
                            ("E", "Elf"),
                            ("D", "Dwarf"),
                        ],
                        max_length=1,
                        unique=True,
                    ),
                ),
                ("adult_age", models.SmallIntegerField()),
                ("life_expectancy", models.SmallIntegerField()),
                (
                    "alignment",
                    models.CharField(
                        choices=[("L", "Lawful"), ("F", "Freedom"), ("N", "None")],
                        max_length=1,
                    ),
                ),
                (
                    "size",
                    models.CharField(
                        choices=[("S", "Small"), ("M", "Medium")], max_length=1
                    ),
                ),
                ("speed", models.SmallIntegerField()),
                ("abilities", models.ManyToManyField(to="character.ability")),
                ("languages", models.ManyToManyField(to="character.language")),
            ],
        ),
        migrations.CreateModel(
            name="Proficiencies",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("armor", models.TextField(blank=True, max_length=50, null=True)),
                ("weapons", models.TextField(blank=True, max_length=50, null=True)),
                ("tools", models.TextField(blank=True, max_length=50, null=True)),
                (
                    "saving_throws",
                    models.TextField(blank=True, max_length=50, null=True),
                ),
                ("skills", models.TextField(blank=True, max_length=50, null=True)),
                (
                    "class_feature",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="character.classfeature",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "proficiencies",
            },
        ),
        migrations.CreateModel(
            name="HitPoints",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("hit_dice", models.CharField(max_length=5)),
                ("hp_first_level", models.SmallIntegerField()),
                ("hp_higher_levels", models.SmallIntegerField()),
                (
                    "class_feature",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="character.classfeature",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "hit points",
            },
        ),
        migrations.CreateModel(
            name="Equipment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=20)),
                (
                    "inventory",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="character.inventory",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="classfeature",
            name="equipment",
            field=models.ManyToManyField(to="character.equipment"),
        ),
        migrations.CreateModel(
            name="AbilityScoreIncrease",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ability",
                    models.CharField(
                        choices=[
                            ("strength", "Strength"),
                            ("dexterity", "Dexterity"),
                            ("constitution", "Constitution"),
                            ("intelligence", "Intelligence"),
                            ("wisdom", "Wisdom"),
                            ("charisma", "Charisma"),
                        ],
                        max_length=20,
                    ),
                ),
                ("increase", models.SmallIntegerField()),
                (
                    "racial_trait",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="character.racialtrait",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Character",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "race",
                    models.CharField(
                        choices=[
                            ("H", "Human"),
                            ("G", "Halfling"),
                            ("E", "Elf"),
                            ("D", "Dwarf"),
                        ],
                        max_length=1,
                    ),
                ),
                (
                    "class_name",
                    models.CharField(
                        choices=[
                            ("C", "Cleric"),
                            ("F", "Fighter"),
                            ("R", "Rogue"),
                            ("W", "Wizard"),
                        ],
                        max_length=1,
                        verbose_name="class",
                    ),
                ),
                ("level", models.SmallIntegerField(default=1)),
                ("xp", models.IntegerField(default=0)),
                ("hp", models.SmallIntegerField(default=100)),
                ("max_hp", models.SmallIntegerField(default=100)),
                ("proficiency_bonus", models.SmallIntegerField(default=2)),
                ("strength", models.SmallIntegerField(default=0)),
                ("dexterity", models.SmallIntegerField(default=0)),
                ("constitution", models.SmallIntegerField(default=0)),
                ("intelligence", models.SmallIntegerField(default=0)),
                ("wisdom", models.SmallIntegerField(default=0)),
                ("charisma", models.SmallIntegerField(default=0)),
                ("strength_modifier", models.SmallIntegerField(default=0)),
                ("dexterity_modifier", models.SmallIntegerField(default=0)),
                ("constitution_modifier", models.SmallIntegerField(default=0)),
                ("intelligence_modifier", models.SmallIntegerField(default=0)),
                ("wisdom_modifier", models.SmallIntegerField(default=0)),
                ("charisma_modifier", models.SmallIntegerField(default=0)),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female"), ("U", "Undefined")],
                        default="M",
                        max_length=1,
                    ),
                ),
                ("ac", models.SmallIntegerField(default=0)),
                ("adult_age", models.SmallIntegerField(blank=True, null=True)),
                ("life_expectancy", models.SmallIntegerField(blank=True, null=True)),
                (
                    "alignment",
                    models.CharField(
                        blank=True,
                        choices=[("L", "Lawful"), ("F", "Freedom"), ("N", "None")],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "size",
                    models.CharField(
                        blank=True,
                        choices=[("S", "Small"), ("M", "Medium")],
                        max_length=1,
                        null=True,
                    ),
                ),
                ("speed", models.SmallIntegerField(blank=True, null=True)),
                ("hit_dice", models.CharField(default="1d8", max_length=5)),
                ("hp_increase", models.SmallIntegerField(default=0)),
                ("abilities", models.ManyToManyField(to="character.ability")),
                (
                    "inventory",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="character.inventory",
                    ),
                ),
                ("languages", models.ManyToManyField(to="character.language")),
                (
                    "proficiencies",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="character.proficiencies",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        django.db.models.functions.text.Upper("name"),
                        name="character_name_upper_idx",
                    )
                ],
            },
        ),
    ]
